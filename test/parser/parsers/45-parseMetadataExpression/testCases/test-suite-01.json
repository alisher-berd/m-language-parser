{
    "description": "",
    "testCases": [
        {
            "input": "type binary meta not - + type [colName, optional colName, ...]",
            "output": {
                "type": "metadata-expression",
                "id": "metadata-expression-0",
                "startIndex": 0,
                "stopIndex": 15,
                "expression": {
                    "type": "primitive-type",
                    "id": "primitive-type-1",
                    "startIndex": 1,
                    "stopIndex": 2,
                    "primitiveType": "binary"
                },
                "metaExpression": {
                    "type": "unary-expression",
                    "id": "unary-expression-3",
                    "startIndex": 3,
                    "stopIndex": 15,
                    "operator": "not",
                    "operand": {
                        "type": "unary-expression",
                        "id": "unary-expression-4",
                        "startIndex": 4,
                        "stopIndex": 15,
                        "operator": "minus",
                        "operand": {
                            "type": "unary-expression",
                            "id": "unary-expression-5",
                            "startIndex": 5,
                            "stopIndex": 15,
                            "operator": "plus",
                            "operand": {
                                "type": "record-type",
                                "id": "record-type-7",
                                "startIndex": 7,
                                "stopIndex": 15,
                                "hasOpenRecordMarker": true,
                                "fieldSpecificationList": [
                                    {
                                        "fieldName": "colName",
                                        "fieldType": null,
                                        "isOptional": false
                                    },
                                    {
                                        "fieldName": "colName",
                                        "fieldType": null,
                                        "isOptional": true
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        {
            "input": "not 23 meta \"Hello!\"",
            "output": {
                "type": "metadata-expression",
                "id": "metadata-expression-0",
                "startIndex": 0,
                "stopIndex": 4,
                "expression": {
                    "type": "unary-expression",
                    "id": "unary-expression-0",
                    "startIndex": 0,
                    "stopIndex": 2,
                    "operator": "not",
                    "operand": {
                        "type": "literal-expression",
                        "id": "literal-expression-1",
                        "startIndex": 1,
                        "stopIndex": 2,
                        "literalValue": "23",
                        "literalType": "number-literal"
                    }
                },
                "metaExpression": {
                    "type": "literal-expression",
                    "id": "literal-expression-3",
                    "startIndex": 3,
                    "stopIndex": 4,
                    "literalValue": "\"Hello!\"",
                    "literalType": "text-literal"
                }
            }
        },
        {
            "input": "- [columnName = 2, anotherCol = 4] meta not @columnName",
            "output": {
                "type": "metadata-expression",
                "id": "metadata-expression-0",
                "startIndex": 0,
                "stopIndex": 14,
                "expression": {
                    "type": "unary-expression",
                    "id": "unary-expression-0",
                    "startIndex": 0,
                    "stopIndex": 10,
                    "operator": "minus",
                    "operand": {
                        "type": "record-expression",
                        "id": "record-expression-1",
                        "startIndex": 1,
                        "stopIndex": 10,
                        "fieldList": [
                            {
                                "fieldName": "columnName",
                                "expression": {
                                    "type": "literal-expression",
                                    "id": "literal-expression-4",
                                    "startIndex": 4,
                                    "stopIndex": 5,
                                    "literalValue": "2",
                                    "literalType": "number-literal"
                                }
                            },
                            {
                                "fieldName": "anotherCol",
                                "expression": {
                                    "type": "literal-expression",
                                    "id": "literal-expression-8",
                                    "startIndex": 8,
                                    "stopIndex": 9,
                                    "literalValue": "4",
                                    "literalType": "number-literal"
                                }
                            }
                        ]
                    }
                },
                "metaExpression": {
                    "type": "unary-expression",
                    "id": "unary-expression-11",
                    "startIndex": 11,
                    "stopIndex": 14,
                    "operator": "not",
                    "operand": {
                        "type": "identifier-expression",
                        "id": "identifier-expression-12",
                        "startIndex": 12,
                        "stopIndex": 14,
                        "identifierName": "columnName",
                        "isInclusive": true
                    }
                }
            }
        },
        {
            "input": "- [[tableName.columnName], [tableName.columnName]]? meta not tableName [[tableName.columnName], [tableName.columnName]]?",
            "output": {
                "type": "metadata-expression",
                "id": "metadata-expression-0",
                "startIndex": 0,
                "stopIndex": 24,
                "expression": {
                    "type": "unary-expression",
                    "id": "unary-expression-0",
                    "startIndex": 0,
                    "stopIndex": 11,
                    "operator": "minus",
                    "operand": {
                        "type": "field-access-expression",
                        "id": "field-access-expression-1",
                        "startIndex": 1,
                        "stopIndex": 11,
                        "selectedPrimaryExpression": null,
                        "implicitTargetFieldSelection": null,
                        "implicitTargetProjection": [
                            "tableName.columnName",
                            "tableName.columnName"
                        ],
                        "isOptionalSelection": true
                    }
                },
                "metaExpression": {
                    "type": "unary-expression",
                    "id": "unary-expression-12",
                    "startIndex": 12,
                    "stopIndex": 24,
                    "operator": "not",
                    "operand": {
                        "type": "field-access-expression",
                        "id": "field-access-expression-14",
                        "startIndex": 14,
                        "stopIndex": 24,
                        "selectedPrimaryExpression": {
                            "type": "identifier-expression",
                            "id": "identifier-expression-13",
                            "startIndex": 13,
                            "stopIndex": 14,
                            "identifierName": "tableName",
                            "isInclusive": false
                        },
                        "implicitTargetFieldSelection": null,
                        "implicitTargetProjection": [
                            "tableName.columnName",
                            "tableName.columnName"
                        ],
                        "isOptionalSelection": true
                    }
                }
            }
        },
        {
            "input": "tableName [[#\"Column name\"], [#\"Column name\"]] meta + tableName {2+2}?",
            "output": {
                "type": "metadata-expression",
                "id": "metadata-expression-0",
                "startIndex": 0,
                "stopIndex": 19,
                "expression": {
                    "type": "field-access-expression",
                    "id": "field-access-expression-1",
                    "startIndex": 1,
                    "stopIndex": 10,
                    "selectedPrimaryExpression": {
                        "type": "identifier-expression",
                        "id": "identifier-expression-0",
                        "startIndex": 0,
                        "stopIndex": 1,
                        "identifierName": "tableName",
                        "isInclusive": false
                    },
                    "implicitTargetFieldSelection": null,
                    "implicitTargetProjection": [
                        "#\"Column name\"",
                        "#\"Column name\""
                    ],
                    "isOptionalSelection": false
                },
                "metaExpression": {
                    "type": "unary-expression",
                    "id": "unary-expression-11",
                    "startIndex": 11,
                    "stopIndex": 19,
                    "operator": "plus",
                    "operand": {
                        "type": "item-access-expression",
                        "id": "item-access-expression-13",
                        "startIndex": 13,
                        "stopIndex": 19,
                        "selectedPrimaryExpression": {
                            "type": "identifier-expression",
                            "id": "identifier-expression-12",
                            "startIndex": 12,
                            "stopIndex": 13,
                            "identifierName": "tableName",
                            "isInclusive": false
                        },
                        "itemSelector": {
                            "type": "additive-expression",
                            "id": "additive-expression-14",
                            "startIndex": 14,
                            "stopIndex": 17,
                            "leftOperand": {
                                "type": "literal-expression",
                                "id": "literal-expression-14",
                                "startIndex": 14,
                                "stopIndex": 15,
                                "literalValue": "2",
                                "literalType": "number-literal"
                            },
                            "operator": "plus",
                            "rightOperand": {
                                "type": "literal-expression",
                                "id": "literal-expression-16",
                                "startIndex": 16,
                                "stopIndex": 17,
                                "literalValue": "2",
                                "literalType": "number-literal"
                            }
                        },
                        "isOptionalSelection": true
                    }
                }
            }
        }
    ]
}
