{
    "description": "",
    "testCases": [
        {
            "input": "\n\t\tlet\n\t\t\tcolumnName = 1000 + 10,\n\t\t\tcolumnName2 = columnName - 10\n\t\tin\n\t\t\tcolumnName2\n\t\t",
            "output": {
                "type": "let-expression",
                "id": "let-expression-0",
                "startIndex": 0,
                "stopIndex": 14,
                "variableList": [
                    {
                        "variableName": "columnName",
                        "expression": {
                            "type": "additive-expression",
                            "id": "additive-expression-3",
                            "startIndex": 3,
                            "stopIndex": 6,
                            "leftOperand": {
                                "type": "literal-expression",
                                "id": "literal-expression-3",
                                "startIndex": 3,
                                "stopIndex": 4,
                                "literalValue": "1000",
                                "literalType": "number-literal"
                            },
                            "operator": "plus",
                            "rightOperand": {
                                "type": "literal-expression",
                                "id": "literal-expression-5",
                                "startIndex": 5,
                                "stopIndex": 6,
                                "literalValue": "10",
                                "literalType": "number-literal"
                            }
                        }
                    },
                    {
                        "variableName": "columnName2",
                        "expression": {
                            "type": "additive-expression",
                            "id": "additive-expression-9",
                            "startIndex": 9,
                            "stopIndex": 12,
                            "leftOperand": {
                                "type": "identifier-expression",
                                "id": "identifier-expression-9",
                                "startIndex": 9,
                                "stopIndex": 10,
                                "identifierName": "columnName",
                                "isInclusive": false
                            },
                            "operator": "minus",
                            "rightOperand": {
                                "type": "literal-expression",
                                "id": "literal-expression-11",
                                "startIndex": 11,
                                "stopIndex": 12,
                                "literalValue": "10",
                                "literalType": "number-literal"
                            }
                        }
                    }
                ],
                "outputExpression": {
                    "type": "identifier-expression",
                    "id": "identifier-expression-13",
                    "startIndex": 13,
                    "stopIndex": 14,
                    "identifierName": "columnName2",
                    "isInclusive": false
                }
            }
        },
        {
            "input": "\n\t\tlet\n\t\t\tcolumnName1 = 1,\n\t\t\tcolumnName2 = 2\n\t\tin\n\t\t\t3\n\t\t",
            "output": {
                "type": "let-expression",
                "id": "let-expression-0",
                "startIndex": 0,
                "stopIndex": 10,
                "variableList": [
                    {
                        "variableName": "columnName1",
                        "expression": {
                            "type": "literal-expression",
                            "id": "literal-expression-3",
                            "startIndex": 3,
                            "stopIndex": 4,
                            "literalValue": "1",
                            "literalType": "number-literal"
                        }
                    },
                    {
                        "variableName": "columnName2",
                        "expression": {
                            "type": "literal-expression",
                            "id": "literal-expression-7",
                            "startIndex": 7,
                            "stopIndex": 8,
                            "literalValue": "2",
                            "literalType": "number-literal"
                        }
                    }
                ],
                "outputExpression": {
                    "type": "literal-expression",
                    "id": "literal-expression-9",
                    "startIndex": 9,
                    "stopIndex": 10,
                    "literalValue": "3",
                    "literalType": "number-literal"
                }
            }
        }
    ]
}
