{
    "description": "",
    "testCases": [
        {
            "input": "type binary meta not - + type [colName, optional colName, ...]    +     + {2, 2..5, 6}",
            "output": {
                "type": "additive-expression",
                "id": "additive-expression-0",
                "startIndex": 0,
                "stopIndex": 26,
                "leftOperand": {
                    "type": "metadata-expression",
                    "id": "metadata-expression-0",
                    "startIndex": 0,
                    "stopIndex": 15,
                    "expression": {
                        "type": "primitive-type",
                        "id": "primitive-type-1",
                        "startIndex": 1,
                        "stopIndex": 2,
                        "primitiveType": "binary"
                    },
                    "metaExpression": {
                        "type": "unary-expression",
                        "id": "unary-expression-3",
                        "startIndex": 3,
                        "stopIndex": 15,
                        "operator": "not",
                        "operand": {
                            "type": "unary-expression",
                            "id": "unary-expression-4",
                            "startIndex": 4,
                            "stopIndex": 15,
                            "operator": "minus",
                            "operand": {
                                "type": "unary-expression",
                                "id": "unary-expression-5",
                                "startIndex": 5,
                                "stopIndex": 15,
                                "operator": "plus",
                                "operand": {
                                    "type": "record-type",
                                    "id": "record-type-7",
                                    "startIndex": 7,
                                    "stopIndex": 15,
                                    "hasOpenRecordMarker": true,
                                    "fieldSpecificationList": [
                                        {
                                            "fieldName": "colName",
                                            "fieldType": null,
                                            "isOptional": false
                                        },
                                        {
                                            "fieldName": "colName",
                                            "fieldType": null,
                                            "isOptional": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "operator": "plus",
                "rightOperand": {
                    "type": "unary-expression",
                    "id": "unary-expression-16",
                    "startIndex": 16,
                    "stopIndex": 26,
                    "operator": "plus",
                    "operand": {
                        "type": "list-expression",
                        "id": "list-expression-17",
                        "startIndex": 17,
                        "stopIndex": 26,
                        "itemList": [
                            {
                                "type": "item",
                                "id": "item-18",
                                "startIndex": 18,
                                "stopIndex": 19,
                                "expression": {
                                    "type": "literal-expression",
                                    "id": "literal-expression-18",
                                    "startIndex": 18,
                                    "stopIndex": 19,
                                    "literalValue": "2",
                                    "literalType": "number-literal"
                                },
                                "isSequenceItem": false,
                                "secondExpression": null
                            },
                            {
                                "type": "item",
                                "id": "item-20",
                                "startIndex": 20,
                                "stopIndex": 23,
                                "expression": {
                                    "type": "literal-expression",
                                    "id": "literal-expression-20",
                                    "startIndex": 20,
                                    "stopIndex": 21,
                                    "literalValue": "2",
                                    "literalType": "number-literal"
                                },
                                "isSequenceItem": true,
                                "secondExpression": {
                                    "type": "literal-expression",
                                    "id": "literal-expression-22",
                                    "startIndex": 22,
                                    "stopIndex": 23,
                                    "literalValue": "5",
                                    "literalType": "number-literal"
                                }
                            },
                            {
                                "type": "item",
                                "id": "item-24",
                                "startIndex": 24,
                                "stopIndex": 25,
                                "expression": {
                                    "type": "literal-expression",
                                    "id": "literal-expression-24",
                                    "startIndex": 24,
                                    "stopIndex": 25,
                                    "literalValue": "6",
                                    "literalType": "number-literal"
                                },
                                "isSequenceItem": false,
                                "secondExpression": null
                            }
                        ]
                    }
                }
            }
        },
        {
            "input": "not 23 meta \"Hello!\"     &      - [columnName = 2, anotherCol = 4] meta not @columnName",
            "output": {
                "type": "additive-expression",
                "id": "additive-expression-0",
                "startIndex": 0,
                "stopIndex": 19,
                "leftOperand": {
                    "type": "metadata-expression",
                    "id": "metadata-expression-0",
                    "startIndex": 0,
                    "stopIndex": 4,
                    "expression": {
                        "type": "unary-expression",
                        "id": "unary-expression-0",
                        "startIndex": 0,
                        "stopIndex": 2,
                        "operator": "not",
                        "operand": {
                            "type": "literal-expression",
                            "id": "literal-expression-1",
                            "startIndex": 1,
                            "stopIndex": 2,
                            "literalValue": "23",
                            "literalType": "number-literal"
                        }
                    },
                    "metaExpression": {
                        "type": "literal-expression",
                        "id": "literal-expression-3",
                        "startIndex": 3,
                        "stopIndex": 4,
                        "literalValue": "\"Hello!\"",
                        "literalType": "text-literal"
                    }
                },
                "operator": "ampersand",
                "rightOperand": {
                    "type": "metadata-expression",
                    "id": "metadata-expression-5",
                    "startIndex": 5,
                    "stopIndex": 19,
                    "expression": {
                        "type": "unary-expression",
                        "id": "unary-expression-5",
                        "startIndex": 5,
                        "stopIndex": 15,
                        "operator": "minus",
                        "operand": {
                            "type": "record-expression",
                            "id": "record-expression-6",
                            "startIndex": 6,
                            "stopIndex": 15,
                            "fieldList": [
                                {
                                    "fieldName": "columnName",
                                    "expression": {
                                        "type": "literal-expression",
                                        "id": "literal-expression-9",
                                        "startIndex": 9,
                                        "stopIndex": 10,
                                        "literalValue": "2",
                                        "literalType": "number-literal"
                                    }
                                },
                                {
                                    "fieldName": "anotherCol",
                                    "expression": {
                                        "type": "literal-expression",
                                        "id": "literal-expression-13",
                                        "startIndex": 13,
                                        "stopIndex": 14,
                                        "literalValue": "4",
                                        "literalType": "number-literal"
                                    }
                                }
                            ]
                        }
                    },
                    "metaExpression": {
                        "type": "unary-expression",
                        "id": "unary-expression-16",
                        "startIndex": 16,
                        "stopIndex": 19,
                        "operator": "not",
                        "operand": {
                            "type": "identifier-expression",
                            "id": "identifier-expression-17",
                            "startIndex": 17,
                            "stopIndex": 19,
                            "identifierName": "columnName",
                            "isInclusive": true
                        }
                    }
                }
            }
        },
        {
            "input": "someFunction (2, a, 4)   +    tableName [[#\"Column name\"], [#\"Column name\"]] meta + tableName {2+2}?",
            "output": {
                "type": "additive-expression",
                "id": "additive-expression-0",
                "startIndex": 0,
                "stopIndex": 28,
                "leftOperand": {
                    "type": "invoke-expression",
                    "id": "invoke-expression-1",
                    "startIndex": 1,
                    "stopIndex": 8,
                    "invokedPrimaryExpression": {
                        "type": "identifier-expression",
                        "id": "identifier-expression-0",
                        "startIndex": 0,
                        "stopIndex": 1,
                        "identifierName": "someFunction",
                        "isInclusive": false
                    },
                    "argumentList": [
                        {
                            "type": "literal-expression",
                            "id": "literal-expression-2",
                            "startIndex": 2,
                            "stopIndex": 3,
                            "literalValue": "2",
                            "literalType": "number-literal"
                        },
                        {
                            "type": "identifier-expression",
                            "id": "identifier-expression-4",
                            "startIndex": 4,
                            "stopIndex": 5,
                            "identifierName": "a",
                            "isInclusive": false
                        },
                        {
                            "type": "literal-expression",
                            "id": "literal-expression-6",
                            "startIndex": 6,
                            "stopIndex": 7,
                            "literalValue": "4",
                            "literalType": "number-literal"
                        }
                    ]
                },
                "operator": "plus",
                "rightOperand": {
                    "type": "metadata-expression",
                    "id": "metadata-expression-9",
                    "startIndex": 9,
                    "stopIndex": 28,
                    "expression": {
                        "type": "field-access-expression",
                        "id": "field-access-expression-10",
                        "startIndex": 10,
                        "stopIndex": 19,
                        "selectedPrimaryExpression": {
                            "type": "identifier-expression",
                            "id": "identifier-expression-9",
                            "startIndex": 9,
                            "stopIndex": 10,
                            "identifierName": "tableName",
                            "isInclusive": false
                        },
                        "implicitTargetFieldSelection": null,
                        "implicitTargetProjection": [
                            "#\"Column name\"",
                            "#\"Column name\""
                        ],
                        "isOptionalSelection": false
                    },
                    "metaExpression": {
                        "type": "unary-expression",
                        "id": "unary-expression-20",
                        "startIndex": 20,
                        "stopIndex": 28,
                        "operator": "plus",
                        "operand": {
                            "type": "item-access-expression",
                            "id": "item-access-expression-22",
                            "startIndex": 22,
                            "stopIndex": 28,
                            "selectedPrimaryExpression": {
                                "type": "identifier-expression",
                                "id": "identifier-expression-21",
                                "startIndex": 21,
                                "stopIndex": 22,
                                "identifierName": "tableName",
                                "isInclusive": false
                            },
                            "itemSelector": {
                                "type": "additive-expression",
                                "id": "additive-expression-23",
                                "startIndex": 23,
                                "stopIndex": 26,
                                "leftOperand": {
                                    "type": "literal-expression",
                                    "id": "literal-expression-23",
                                    "startIndex": 23,
                                    "stopIndex": 24,
                                    "literalValue": "2",
                                    "literalType": "number-literal"
                                },
                                "operator": "plus",
                                "rightOperand": {
                                    "type": "literal-expression",
                                    "id": "literal-expression-25",
                                    "startIndex": 25,
                                    "stopIndex": 26,
                                    "literalValue": "2",
                                    "literalType": "number-literal"
                                }
                            },
                            "isOptionalSelection": true
                        }
                    }
                }
            }
        }
    ]
}
